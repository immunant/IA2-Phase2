diff --git a/external/nginx/src/core/ngx_conf_file.c b/external/nginx/src/core/ngx_conf_file.c
index 0baedf9fd..e5e7d0b75 100644
--- a/external/nginx/src/core/ngx_conf_file.c
+++ b/external/nginx/src/core/ngx_conf_file.c
@@ -301,7 +301,7 @@ ngx_conf_parse(ngx_conf_t *cf, ngx_str_t *filename)
                 goto failed;
             }
 
-            rv = IA2_CALL((*cf->handler), 18)(cf, NULL, cf->handler_conf);
+            rv = IA2_CALL((cf->handler), 18)(cf, NULL, cf->handler_conf);
             if (rv == NGX_CONF_OK) {
                 continue;
             }
diff --git a/external/nginx/src/core/ngx_rbtree.h b/external/nginx/src/core/ngx_rbtree.h
index 0536b2209..ffb6b6618 100644
--- a/external/nginx/src/core/ngx_rbtree.h
+++ b/external/nginx/src/core/ngx_rbtree.h
@@ -44,7 +44,7 @@ struct ngx_rbtree_s {
     ngx_rbtree_sentinel_init(s);                                              \
     (tree)->root = s;                                                         \
     (tree)->sentinel = s;                                                     \
-    (tree)->insert = i
+    (tree)->insert = IA2_FN(i)
 
 #define ngx_rbtree_data(node, type, link)                                     \
     (type *) ((u_char *) (node) - offsetof(type, link))
diff --git a/external/nginx/src/core/ngx_regex.c b/external/nginx/src/core/ngx_regex.c
index 7b4b903f2..9f2262144 100644
--- a/external/nginx/src/core/ngx_regex.c
+++ b/external/nginx/src/core/ngx_regex.c
@@ -133,7 +133,7 @@ ngx_regex_compile(ngx_regex_compile_t *rc)
 
         ngx_regex_malloc_init(NULL);
 
-        gctx = pcre2_general_context_create(IA2_FN(ngx_regex_malloc), IA2_FN(ngx_regex_free),
+        gctx = pcre2_general_context_create(ngx_regex_malloc, ngx_regex_free,
                                             NULL);
         if (gctx == NULL) {
             ngx_regex_malloc_done();
diff --git a/external/nginx/src/event/modules/ngx_epoll_module.c b/external/nginx/src/event/modules/ngx_epoll_module.c
index be18abd05..c036e251f 100644
--- a/external/nginx/src/event/modules/ngx_epoll_module.c
+++ b/external/nginx/src/event/modules/ngx_epoll_module.c
@@ -452,7 +452,7 @@ ngx_epoll_notify_handler(ngx_event_t *ev)
         }
     }
 
-    handler = ev->data;
+    handler.ptr = ev->data;
     IA2_CALL(handler, 13)(ev);
 }
 
@@ -766,7 +766,7 @@ ngx_epoll_notify(ngx_event_handler_pt handler)
 {
     static uint64_t inc = 1;
 
-    notify_event.data = handler;
+    notify_event.data = handler.ptr;
 
     if ((size_t) write(notify_fd, &inc, sizeof(uint64_t)) != sizeof(uint64_t)) {
         ngx_log_error(NGX_LOG_ALERT, notify_event.log, ngx_errno,
diff --git a/external/nginx/src/event/ngx_event.c b/external/nginx/src/event/ngx_event.c
index 38fa6ef19..06e039a82 100644
--- a/external/nginx/src/event/ngx_event.c
+++ b/external/nginx/src/event/ngx_event.c
@@ -681,7 +681,7 @@ ngx_event_process_init(ngx_cycle_t *cycle)
         struct itimerval  itv;
 
         ngx_memzero(&sa, sizeof(struct sigaction));
-        sa.sa_handler = IA2_FN(ngx_timer_signal_handler);
+        sa.sa_handler = ngx_timer_signal_handler;
         sigemptyset(&sa.sa_mask);
 
         if (sigaction(SIGALRM, &sa, NULL) == -1) {
diff --git a/external/nginx/src/event/ngx_event_openssl.c b/external/nginx/src/event/ngx_event_openssl.c
index 454eb8885..2c3659086 100644
--- a/external/nginx/src/event/ngx_event_openssl.c
+++ b/external/nginx/src/event/ngx_event_openssl.c
@@ -389,7 +389,7 @@ ngx_ssl_create(ngx_ssl_t *ssl, ngx_uint_t protocols, void *data)
 
     SSL_CTX_set_read_ahead(ssl->ctx, 1);
 
-    SSL_CTX_set_info_callback(ssl->ctx, IA2_FN(ngx_ssl_info_callback));
+    SSL_CTX_set_info_callback(ssl->ctx, ngx_ssl_info_callback);
 
     return NGX_OK;
 }
@@ -784,7 +784,7 @@ ngx_ssl_load_certificate_key(ngx_pool_t *pool, char **err,
     if (passwords) {
         tries = passwords->nelts;
         pwd = passwords->elts;
-        cb = IA2_FN(ngx_ssl_password_callback);
+        cb = ngx_ssl_password_callback;
 
     } else {
         tries = 1;
@@ -870,7 +870,7 @@ ngx_ssl_client_certificate(ngx_conf_t *cf, ngx_ssl_t *ssl, ngx_str_t *cert,
 {
     STACK_OF(X509_NAME)  *list;
 
-    SSL_CTX_set_verify(ssl->ctx, SSL_VERIFY_PEER, IA2_FN(ngx_ssl_verify_callback));
+    SSL_CTX_set_verify(ssl->ctx, SSL_VERIFY_PEER, ngx_ssl_verify_callback);
 
     SSL_CTX_set_verify_depth(ssl->ctx, depth);
 
@@ -917,7 +917,7 @@ ngx_ssl_trusted_certificate(ngx_conf_t *cf, ngx_ssl_t *ssl, ngx_str_t *cert,
     ngx_int_t depth)
 {
     SSL_CTX_set_verify(ssl->ctx, SSL_CTX_get_verify_mode(ssl->ctx),
-                       IA2_FN(ngx_ssl_verify_callback));
+                       ngx_ssl_verify_callback);
 
     SSL_CTX_set_verify_depth(ssl->ctx, depth);
 
@@ -1592,7 +1592,7 @@ ngx_ssl_client_session_cache(ngx_conf_t *cf, ngx_ssl_t *ssl, ngx_uint_t enable)
                                    SSL_SESS_CACHE_CLIENT
                                    |SSL_SESS_CACHE_NO_INTERNAL);
 
-    SSL_CTX_sess_set_new_cb(ssl->ctx, IA2_FN(ngx_ssl_new_client_session));
+    SSL_CTX_sess_set_new_cb(ssl->ctx, ngx_ssl_new_client_session);
 
     return NGX_OK;
 }
@@ -3588,9 +3588,9 @@ ngx_ssl_session_cache(ngx_ssl_t *ssl, ngx_str_t *sess_ctx,
     }
 
     if (shm_zone) {
-        SSL_CTX_sess_set_new_cb(ssl->ctx, IA2_FN(ngx_ssl_new_session));
-        SSL_CTX_sess_set_get_cb(ssl->ctx, IA2_FN(ngx_ssl_get_cached_session));
-        SSL_CTX_sess_set_remove_cb(ssl->ctx, IA2_FN(ngx_ssl_remove_session));
+        SSL_CTX_sess_set_new_cb(ssl->ctx, ngx_ssl_new_session);
+        SSL_CTX_sess_set_get_cb(ssl->ctx, ngx_ssl_get_cached_session);
+        SSL_CTX_sess_set_remove_cb(ssl->ctx, ngx_ssl_remove_session);
 
         if (SSL_CTX_set_ex_data(ssl->ctx, ngx_ssl_session_cache_index, shm_zone)
             == 0)
diff --git a/external/nginx/src/http/modules/ngx_http_autoindex_module.c b/external/nginx/src/http/modules/ngx_http_autoindex_module.c
index 98b92ec4d..ef175dbad 100644
--- a/external/nginx/src/http/modules/ngx_http_autoindex_module.c
+++ b/external/nginx/src/http/modules/ngx_http_autoindex_module.c
@@ -388,7 +388,7 @@ ngx_http_autoindex_handler(ngx_http_request_t *r)
     if (entries.nelts > 1) {
         ngx_qsort(entries.elts, (size_t) entries.nelts,
                   sizeof(ngx_http_autoindex_entry_t),
-                  IA2_FN(ngx_http_autoindex_cmp_entries));
+                  ngx_http_autoindex_cmp_entries);
     }
 
     switch (format) {
diff --git a/external/nginx/src/http/modules/ngx_http_browser_module.c b/external/nginx/src/http/modules/ngx_http_browser_module.c
index 36ed51d64..3bb5634a9 100644
--- a/external/nginx/src/http/modules/ngx_http_browser_module.c
+++ b/external/nginx/src/http/modules/ngx_http_browser_module.c
@@ -487,7 +487,7 @@ found:
 
         ngx_qsort(browsers, (size_t) conf->modern_browsers->nelts,
                   sizeof(ngx_http_modern_browser_t),
-                  IA2_FN(ngx_http_modern_browser_sort));
+                  ngx_http_modern_browser_sort);
 
         for (i = 0; i < conf->modern_browsers->nelts; i++) {
              n = browsers[i].skip;
diff --git a/external/nginx/src/http/modules/ngx_http_fastcgi_module.c b/external/nginx/src/http/modules/ngx_http_fastcgi_module.c
index 4f6ab7d54..5cda86746 100644
--- a/external/nginx/src/http/modules/ngx_http_fastcgi_module.c
+++ b/external/nginx/src/http/modules/ngx_http_fastcgi_module.c
@@ -3385,8 +3385,8 @@ ngx_http_fastcgi_init_params(ngx_conf_t *cf, ngx_http_fastcgi_loc_conf_t *conf,
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) (void *)
-                                                 IA2_FN(ngx_http_script_copy_len_code);
+        copy->code = (ngx_http_script_code_pt) { (void *)
+                                                 IA2_FN_ADDR(ngx_http_script_copy_len_code) };
         copy->len = src[i].key.len;
 
         copy = ngx_array_push_n(params->lengths,
@@ -3395,8 +3395,8 @@ ngx_http_fastcgi_init_params(ngx_conf_t *cf, ngx_http_fastcgi_loc_conf_t *conf,
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) (void *)
-                                                 IA2_FN(ngx_http_script_copy_len_code);
+        copy->code = (ngx_http_script_code_pt) { (void *)
+                                                 IA2_FN_ADDR(ngx_http_script_copy_len_code) };
         copy->len = src[i].skip_empty;
 
 
diff --git a/external/nginx/src/http/modules/ngx_http_gzip_filter_module.c b/external/nginx/src/http/modules/ngx_http_gzip_filter_module.c
index a351e62f3..7ae96e618 100644
--- a/external/nginx/src/http/modules/ngx_http_gzip_filter_module.c
+++ b/external/nginx/src/http/modules/ngx_http_gzip_filter_module.c
@@ -613,8 +613,8 @@ ngx_http_gzip_filter_deflate_start(ngx_http_request_t *r,
 
     ctx->free_mem = ctx->preallocated;
 
-    ctx->zstream.zalloc = IA2_FN(ngx_http_gzip_filter_alloc);
-    ctx->zstream.zfree = IA2_FN(ngx_http_gzip_filter_free);
+    ctx->zstream.zalloc = ngx_http_gzip_filter_alloc;
+    ctx->zstream.zfree = ngx_http_gzip_filter_free;
     ctx->zstream.opaque = ctx;
 
     rc = deflateInit2(&ctx->zstream, (int) conf->level, Z_DEFLATED,
diff --git a/external/nginx/src/http/modules/ngx_http_log_module.c b/external/nginx/src/http/modules/ngx_http_log_module.c
index 4feebff24..ccc16f6b1 100644
--- a/external/nginx/src/http/modules/ngx_http_log_module.c
+++ b/external/nginx/src/http/modules/ngx_http_log_module.c
@@ -618,8 +618,8 @@ ngx_http_log_gzip(ngx_fd_t fd, u_char *buf, size_t len, ngx_int_t level,
 
     pool->log = log;
 
-    zstream.zalloc = IA2_FN(ngx_http_log_gzip_alloc);
-    zstream.zfree = IA2_FN(ngx_http_log_gzip_free);
+    zstream.zalloc = ngx_http_log_gzip_alloc;
+    zstream.zfree = ngx_http_log_gzip_free;
     zstream.opaque = pool;
 
     out = ngx_pnalloc(pool, size);
diff --git a/external/nginx/src/http/modules/ngx_http_map_module.c b/external/nginx/src/http/modules/ngx_http_map_module.c
index 3520abd71..ee112811a 100644
--- a/external/nginx/src/http/modules/ngx_http_map_module.c
+++ b/external/nginx/src/http/modules/ngx_http_map_module.c
@@ -314,7 +314,7 @@ ngx_http_map_block(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
 
         ngx_qsort(ctx.keys.dns_wc_head.elts,
                   (size_t) ctx.keys.dns_wc_head.nelts,
-                  sizeof(ngx_hash_key_t), IA2_FN(ngx_http_map_cmp_dns_wildcards));
+                  sizeof(ngx_hash_key_t), ngx_http_map_cmp_dns_wildcards);
 
         hash.hash = NULL;
         hash.temp_pool = pool;
@@ -334,7 +334,7 @@ ngx_http_map_block(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
 
         ngx_qsort(ctx.keys.dns_wc_tail.elts,
                   (size_t) ctx.keys.dns_wc_tail.nelts,
-                  sizeof(ngx_hash_key_t), IA2_FN(ngx_http_map_cmp_dns_wildcards));
+                  sizeof(ngx_hash_key_t), ngx_http_map_cmp_dns_wildcards);
 
         hash.hash = NULL;
         hash.temp_pool = pool;
diff --git a/external/nginx/src/http/modules/ngx_http_proxy_module.c b/external/nginx/src/http/modules/ngx_http_proxy_module.c
index 7ff68d192..d9b1e5fed 100644
--- a/external/nginx/src/http/modules/ngx_http_proxy_module.c
+++ b/external/nginx/src/http/modules/ngx_http_proxy_module.c
@@ -4031,8 +4031,8 @@ ngx_http_proxy_init_headers(ngx_conf_t *cf, ngx_http_proxy_loc_conf_t *conf,
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) (void *)
-                                                 IA2_FN(ngx_http_script_copy_len_code);
+        copy->code = (ngx_http_script_code_pt) { (void *)
+                                                 IA2_FN_ADDR(ngx_http_script_copy_len_code) };
         copy->len = src[i].key.len;
 
         size = (sizeof(ngx_http_script_copy_code_t)
diff --git a/external/nginx/src/http/modules/ngx_http_referer_module.c b/external/nginx/src/http/modules/ngx_http_referer_module.c
index aa34d50ec..bd486dcaf 100644
--- a/external/nginx/src/http/modules/ngx_http_referer_module.c
+++ b/external/nginx/src/http/modules/ngx_http_referer_module.c
@@ -413,7 +413,7 @@ ngx_http_referer_merge_conf(ngx_conf_t *cf, void *parent, void *child)
         ngx_qsort(conf->keys->dns_wc_head.elts,
                   (size_t) conf->keys->dns_wc_head.nelts,
                   sizeof(ngx_hash_key_t),
-                  IA2_FN(ngx_http_cmp_referer_wildcards));
+                  ngx_http_cmp_referer_wildcards);
 
         hash.hash = NULL;
         hash.temp_pool = cf->temp_pool;
@@ -433,7 +433,7 @@ ngx_http_referer_merge_conf(ngx_conf_t *cf, void *parent, void *child)
         ngx_qsort(conf->keys->dns_wc_tail.elts,
                   (size_t) conf->keys->dns_wc_tail.nelts,
                   sizeof(ngx_hash_key_t),
-                  IA2_FN(ngx_http_cmp_referer_wildcards));
+                  ngx_http_cmp_referer_wildcards);
 
         hash.hash = NULL;
         hash.temp_pool = cf->temp_pool;
diff --git a/external/nginx/src/http/modules/ngx_http_scgi_module.c b/external/nginx/src/http/modules/ngx_http_scgi_module.c
index 5d413a553..3a316bb8a 100644
--- a/external/nginx/src/http/modules/ngx_http_scgi_module.c
+++ b/external/nginx/src/http/modules/ngx_http_scgi_module.c
@@ -1773,8 +1773,8 @@ ngx_http_scgi_init_params(ngx_conf_t *cf, ngx_http_scgi_loc_conf_t *conf,
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) (void *)
-                                                 IA2_FN(ngx_http_script_copy_len_code);
+        copy->code = (ngx_http_script_code_pt) { (void *)
+                                                 IA2_FN_ADDR(ngx_http_script_copy_len_code) };
         copy->len = src[i].key.len + 1;
 
         copy = ngx_array_push_n(params->lengths,
@@ -1783,8 +1783,8 @@ ngx_http_scgi_init_params(ngx_conf_t *cf, ngx_http_scgi_loc_conf_t *conf,
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) (void *)
-                                                 IA2_FN(ngx_http_script_copy_len_code);
+        copy->code = (ngx_http_script_code_pt) { (void *)
+                                                 IA2_FN_ADDR(ngx_http_script_copy_len_code) };
         copy->len = src[i].skip_empty;
 
 
diff --git a/external/nginx/src/http/modules/ngx_http_upstream_hash_module.c b/external/nginx/src/http/modules/ngx_http_upstream_hash_module.c
index ef0376fca..e44d92930 100644
--- a/external/nginx/src/http/modules/ngx_http_upstream_hash_module.c
+++ b/external/nginx/src/http/modules/ngx_http_upstream_hash_module.c
@@ -391,7 +391,7 @@ ngx_http_upstream_init_chash(ngx_conf_t *cf, ngx_http_upstream_srv_conf_t *us)
     ngx_qsort(points->point,
               points->number,
               sizeof(ngx_http_upstream_chash_point_t),
-              IA2_FN(ngx_http_upstream_chash_cmp_points));
+              ngx_http_upstream_chash_cmp_points);
 
     for (i = 0, j = 1; j < points->number; j++) {
         if (points->point[i].hash != points->point[j].hash) {
diff --git a/external/nginx/src/http/modules/ngx_http_upstream_keepalive_module.c b/external/nginx/src/http/modules/ngx_http_upstream_keepalive_module.c
index 3d3a389b0..e09302518 100644
--- a/external/nginx/src/http/modules/ngx_http_upstream_keepalive_module.c
+++ b/external/nginx/src/http/modules/ngx_http_upstream_keepalive_module.c
@@ -566,7 +566,7 @@ ngx_http_upstream_keepalive(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
 
     uscf = ngx_http_conf_get_module_srv_conf(cf, ngx_http_upstream_module);
 
-    kcf->original_init_upstream = uscf->peer.init_upstream
+    kcf->original_init_upstream = IA2_ADDR(uscf->peer.init_upstream)
                                   ? uscf->peer.init_upstream
                                   : IA2_FN(ngx_http_upstream_init_round_robin);
 
diff --git a/external/nginx/src/http/modules/ngx_http_uwsgi_module.c b/external/nginx/src/http/modules/ngx_http_uwsgi_module.c
index 943970138..cbdcd9542 100644
--- a/external/nginx/src/http/modules/ngx_http_uwsgi_module.c
+++ b/external/nginx/src/http/modules/ngx_http_uwsgi_module.c
@@ -2059,8 +2059,8 @@ ngx_http_uwsgi_init_params(ngx_conf_t *cf, ngx_http_uwsgi_loc_conf_t *conf,
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) (void *)
-                                                 IA2_FN(ngx_http_script_copy_len_code);
+        copy->code = (ngx_http_script_code_pt) { (void *)
+                                                 IA2_FN_ADDR(ngx_http_script_copy_len_code) };
         copy->len = src[i].key.len;
 
         copy = ngx_array_push_n(params->lengths,
@@ -2069,8 +2069,8 @@ ngx_http_uwsgi_init_params(ngx_conf_t *cf, ngx_http_uwsgi_loc_conf_t *conf,
             return NGX_ERROR;
         }
 
-        copy->code = (ngx_http_script_code_pt) (void *)
-                                                 IA2_FN(ngx_http_script_copy_len_code);
+        copy->code = (ngx_http_script_code_pt) { (void *)
+                                                 IA2_FN_ADDR(ngx_http_script_copy_len_code) };
         copy->len = src[i].skip_empty;
 
 
diff --git a/external/nginx/src/http/ngx_http.c b/external/nginx/src/http/ngx_http.c
index 65b9a1495..b949f8054 100644
--- a/external/nginx/src/http/ngx_http.c
+++ b/external/nginx/src/http/ngx_http.c
@@ -1541,7 +1541,7 @@ ngx_http_server_names(ngx_conf_t *cf, ngx_http_core_main_conf_t *cmcf,
     if (ha.dns_wc_head.nelts) {
 
         ngx_qsort(ha.dns_wc_head.elts, (size_t) ha.dns_wc_head.nelts,
-                  sizeof(ngx_hash_key_t), IA2_FN(ngx_http_cmp_dns_wildcards));
+                  sizeof(ngx_hash_key_t), ngx_http_cmp_dns_wildcards);
 
         hash.hash = NULL;
         hash.temp_pool = ha.temp_pool;
@@ -1559,7 +1559,7 @@ ngx_http_server_names(ngx_conf_t *cf, ngx_http_core_main_conf_t *cmcf,
     if (ha.dns_wc_tail.nelts) {
 
         ngx_qsort(ha.dns_wc_tail.elts, (size_t) ha.dns_wc_tail.nelts,
-                  sizeof(ngx_hash_key_t), IA2_FN(ngx_http_cmp_dns_wildcards));
+                  sizeof(ngx_hash_key_t), ngx_http_cmp_dns_wildcards);
 
         hash.hash = NULL;
         hash.temp_pool = ha.temp_pool;
diff --git a/external/nginx/src/http/ngx_http_copy_filter_module.c b/external/nginx/src/http/ngx_http_copy_filter_module.c
index 7c987cc74..05cf1d1c0 100644
--- a/external/nginx/src/http/ngx_http_copy_filter_module.c
+++ b/external/nginx/src/http/ngx_http_copy_filter_module.c
@@ -117,8 +117,7 @@ ngx_http_copy_filter(ngx_http_request_t *r, ngx_chain_t *in)
         ctx->bufs = conf->bufs;
         ctx->tag = (ngx_buf_tag_t) &ngx_http_copy_filter_module;
 
-        ctx->output_filter = (ngx_output_chain_filter_pt)
-                                  ngx_http_next_body_filter;
+        ctx->output_filter.ptr = ngx_http_next_body_filter.ptr;
         ctx->filter_ctx = r;
 
 #if (NGX_HAVE_FILE_AIO)
diff --git a/external/nginx/src/http/ngx_http_core_module.c b/external/nginx/src/http/ngx_http_core_module.c
index f6f98a7ab..ef970b13e 100644
--- a/external/nginx/src/http/ngx_http_core_module.c
+++ b/external/nginx/src/http/ngx_http_core_module.c
@@ -870,7 +870,7 @@ ngx_http_core_run_phases(ngx_http_request_t *r)
 
     ph = cmcf->phase_engine.handlers;
 
-    while (ph[r->phase_handler].checker) {
+    while (IA2_ADDR(ph[r->phase_handler].checker)) {
 
         rc = IA2_CALL(ph[r->phase_handler].checker, 38)(r, &ph[r->phase_handler]);
 
diff --git a/external/nginx/src/http/ngx_http_request_body.c b/external/nginx/src/http/ngx_http_request_body.c
index 99515a10a..0b14de4a3 100644
--- a/external/nginx/src/http/ngx_http_request_body.c
+++ b/external/nginx/src/http/ngx_http_request_body.c
@@ -1023,7 +1023,7 @@ ngx_http_request_body_length_filter(ngx_http_request_t *r, ngx_chain_t *in)
         ngx_memzero(b, sizeof(ngx_buf_t));
 
         b->temporary = 1;
-        b->tag = (ngx_buf_tag_t) &IA2_FN(ngx_http_read_client_request_body);
+        b->tag = (ngx_buf_tag_t) IA2_FN_ADDR(ngx_http_read_client_request_body);
         b->start = cl->buf->pos;
         b->pos = cl->buf->pos;
         b->last = cl->buf->last;
@@ -1050,7 +1050,7 @@ ngx_http_request_body_length_filter(ngx_http_request_t *r, ngx_chain_t *in)
     rc = IA2_CALL(ngx_http_top_request_body_filter, 40)(r, out);
 
     ngx_chain_update_chains(r->pool, &rb->free, &rb->busy, &out,
-                            (ngx_buf_tag_t) &IA2_FN(ngx_http_read_client_request_body));
+                            (ngx_buf_tag_t) IA2_FN_ADDR(ngx_http_read_client_request_body));
 
     return rc;
 }
@@ -1159,7 +1159,7 @@ ngx_http_request_body_chunked_filter(ngx_http_request_t *r, ngx_chain_t *in)
                 ngx_memzero(b, sizeof(ngx_buf_t));
 
                 b->temporary = 1;
-                b->tag = (ngx_buf_tag_t) &IA2_FN(ngx_http_read_client_request_body);
+                b->tag = (ngx_buf_tag_t) IA2_FN_ADDR(ngx_http_read_client_request_body);
                 b->start = cl->buf->pos;
                 b->pos = cl->buf->pos;
                 b->last = cl->buf->last;
@@ -1234,7 +1234,7 @@ ngx_http_request_body_chunked_filter(ngx_http_request_t *r, ngx_chain_t *in)
     rc = IA2_CALL(ngx_http_top_request_body_filter, 40)(r, out);
 
     ngx_chain_update_chains(r->pool, &rb->free, &rb->busy, &out,
-                            (ngx_buf_tag_t) &IA2_FN(ngx_http_read_client_request_body));
+                            (ngx_buf_tag_t) IA2_FN_ADDR(ngx_http_read_client_request_body));
 
     return rc;
 }
diff --git a/external/nginx/src/http/ngx_http_script.c b/external/nginx/src/http/ngx_http_script.c
index 2f0cafada..bb3eaa1d6 100644
--- a/external/nginx/src/http/ngx_http_script.c
+++ b/external/nginx/src/http/ngx_http_script.c
@@ -822,8 +822,8 @@ ngx_http_script_add_copy_code(ngx_http_script_compile_t *sc, ngx_str_t *value,
         return NGX_ERROR;
     }
 
-    code->code = (ngx_http_script_code_pt) (void *)
-                                                 IA2_FN(ngx_http_script_copy_len_code);
+    code->code = (ngx_http_script_code_pt) { (void *)
+                                                 IA2_FN_ADDR(ngx_http_script_copy_len_code) };
     code->len = len;
 
     size = (sizeof(ngx_http_script_copy_code_t) + len + sizeof(uintptr_t) - 1)
@@ -912,8 +912,8 @@ ngx_http_script_add_var_code(ngx_http_script_compile_t *sc, ngx_str_t *name)
         return NGX_ERROR;
     }
 
-    code->code = (ngx_http_script_code_pt) (void *)
-                                             IA2_FN(ngx_http_script_copy_var_len_code);
+    code->code = (ngx_http_script_code_pt) { (void *)
+                                             IA2_FN_ADDR(ngx_http_script_copy_var_len_code) };
     code->index = (uintptr_t) index;
 
     code = ngx_http_script_add_code(*sc->values,
@@ -997,14 +997,14 @@ ngx_http_script_add_args_code(ngx_http_script_compile_t *sc)
         return NGX_ERROR;
     }
 
-    *code = (uintptr_t) IA2_FN(ngx_http_script_mark_args_code);
+    *code = (uintptr_t) IA2_FN_ADDR(ngx_http_script_mark_args_code);
 
     code = ngx_http_script_add_code(*sc->values, sizeof(uintptr_t), &sc->main);
     if (code == NULL) {
         return NGX_ERROR;
     }
 
-    *code = (uintptr_t) IA2_FN(ngx_http_script_start_args_code);
+    *code = (uintptr_t) IA2_FN_ADDR(ngx_http_script_start_args_code);
 
     return NGX_OK;
 }
@@ -1307,8 +1307,8 @@ ngx_http_script_add_capture_code(ngx_http_script_compile_t *sc, ngx_uint_t n)
         return NGX_ERROR;
     }
 
-    code->code = (ngx_http_script_code_pt) (void *)
-                                         IA2_FN(ngx_http_script_copy_capture_len_code);
+    code->code = (ngx_http_script_code_pt) { (void *)
+                                         IA2_FN_ADDR(ngx_http_script_copy_capture_len_code) };
     code->n = 2 * n;
 
 
@@ -1422,8 +1422,8 @@ ngx_http_script_add_full_name_code(ngx_http_script_compile_t *sc)
         return NGX_ERROR;
     }
 
-    code->code = (ngx_http_script_code_pt) (void *)
-                                            IA2_FN(ngx_http_script_full_name_len_code);
+    code->code = (ngx_http_script_code_pt) { (void *)
+                                            IA2_FN_ADDR(ngx_http_script_full_name_len_code) };
     code->conf_prefix = sc->conf_prefix;
 
     code = ngx_http_script_add_code(*sc->values,
diff --git a/external/nginx/src/http/ngx_http_upstream.c b/external/nginx/src/http/ngx_http_upstream.c
index 4b8831a77..20fd57481 100644
--- a/external/nginx/src/http/ngx_http_upstream.c
+++ b/external/nginx/src/http/ngx_http_upstream.c
@@ -6580,7 +6580,7 @@ ngx_http_upstream_init_main_conf(ngx_conf_t *cf, void *conf)
 
     for (i = 0; i < umcf->upstreams.nelts; i++) {
 
-        init = uscfp[i]->peer.init_upstream ? uscfp[i]->peer.init_upstream:
+        init = IA2_ADDR(uscfp[i]->peer.init_upstream) ? uscfp[i]->peer.init_upstream:
                                             IA2_FN(ngx_http_upstream_init_round_robin);
 
         if (IA2_CALL(init, 58)(cf, uscfp[i]) != NGX_OK) {
diff --git a/external/nginx/src/os/unix/ngx_process.c b/external/nginx/src/os/unix/ngx_process.c
index e34674af4..c613870ce 100644
--- a/external/nginx/src/os/unix/ngx_process.c
+++ b/external/nginx/src/os/unix/ngx_process.c
@@ -291,7 +291,7 @@ ngx_init_signals(ngx_log_t *log)
         ngx_memzero(&sa, sizeof(struct sigaction));
 
         if (IA2_ADDR(sig->handler)) {
-            sa.sa_sigaction = sig->handler;
+            sa.sa_sigaction = IA2_ADDR(sig->handler);
             sa.sa_flags = SA_SIGINFO;
 
         } else {
-- 
